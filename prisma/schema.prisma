// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id       String @id @default(uuid())
  userName String 
  password String
}

model User {
  id          String  @id @default(uuid())
  userName    String @unique
  password    String
  phoneNumber String @unique
  Farmer      Farmer?
  Buyer       Buyer?
}


model Farmer {
  id              String    @id @default(uuid())
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String    @unique
  profiilePicture String
  farmName        String
  pondSize        Int
  fiscalYear      DateTime  @updatedAt
  active          Boolean
  approved        Boolean
  location        Location?
  Document        Document?
  Issues          Issues?
}

model Buyer {
  id               String    @id @default(uuid())
  user             User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId           String    @unique
  location         Location?
  organizationName String? //optional
  profiilePicture  String
  fiscalYear       DateTime  @updatedAt
  active           Boolean
  approved         Boolean
  Document         Document?
  Issues           Issues?
}

model Location {
  id                 String  @id @default(uuid())
  pradesh            String
  district           String
  nagarpalika        String?
  mahaNagarpalika    String?
  upaMahaNagarpalika String?
  gaupalika          String?
  Woda               Int
  farmer             Farmer? @relation(fields: [farmerId], references: [id], onDelete: Cascade)
  farmerId           String? @unique
  buyer              Buyer?  @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  buyerId            String? @unique
}

model Document {
  id           String   @id @default(uuid())
  farmer       Farmer?  @relation(fields: [farmerId], references: [id], onDelete: Cascade)
  farmerId     String?  @unique
  buyer        Buyer?   @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  buyerId      String?  @unique
  idenfication String[]
  registration String[]
}

model Issues {
  id       String   @id @default(uuid())
  farmer   Farmer?  @relation(fields: [farmerId], references: [id], onDelete: Cascade)
  farmerId String?  @unique
  buyer    Buyer?   @relation(fields: [buyerId], references: [id], onDelete: Cascade)
  buyerId  String?  @unique
  issue    String
  time     DateTime @updatedAt
}


